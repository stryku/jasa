#+TITLE: JASA - Just Another Slack API
#+AUTHOR: dptd

* Installation
=git clone https://github.com/dptd/jasa=

=(ql:quickload :jasa)=

* Usage
JASA follows official [[https://api.slack.com/methods/][Slack Web API]] methods convention. You should be able to specify all the arguments described in the Slack API for method which is implemented. For example for [[https://api.slack.com/methods/chat.postMessage][chat.postMessage]] there are plenty of different methods available. Most of the time you can set them using Common Lisp keywords.

*** How to post messages to specific channel.
#+BEGIN_SRC lisp
(jasa.chat:post-message :token "YourSlackAPIToken"
                        :channel "C01234567"
                        :text "test message")

(jasa.chat:post-message :token "YourSlackAPIToken"
                        :channel "C01234567"
                        :text "test message"
                        :icon_emoji ":robot_face:")
#+END_SRC

You can also use [[https://api.slack.com/docs/message-attachments][message attachments]] by calling =(prepare-attachments)= function.

#+BEGIN_SRC lisp
(jasa.chat:post-message :token "YourSlackAPIToken"
                        :channel "C01234567"
                        :attachments (jasa.chat:prepare-attachments :pretext "Structured Message"
                                                                    :text "Hello there!"
                                                                    :color "#36a64f"))
#+END_SRC

If you want you can also provide raw json yourself.

#+BEGIN_SRC lisp
(jasa.chat:post-message :token "YourSlackAPIToken"
                        :channel "C01234567"
                        :attachments "[{\"pretext\":\"Structured Message\",\"text\":\"Hello there!\",\"color\":\"#36a64f\"}]")
#+END_SRC

*** How to get information about direct messages.
#+BEGIN_SRC lisp
(jasa.im:list-im :token "YourSlackAPIToken")
#+END_SRC

*** How to get messages from specific direct messages channel.
#+BEGIN_SRC lisp
(jasa.im:history :token "YourSlackAPIToken"
                 :channel "D01234567"
                 :count "2")

(jasa.im:history :token "YourSlackAPIToken"
                 :channel "D01234567"
                 :latest "UnixTimeStamp")
#+END_SRC

I am also working on the simple Slack bot - [[https://github.com/dptd/derp][derp]]. *JASA* is being used there a lot so you can check the sample usage there.

* API

| function                        | description                                  |
|---------------------------------+----------------------------------------------|
| *jasa.core*                     |                                              |
| jasa.core:send                  | sends HTTP request to the Slack              |
| jasa.core:send-and-get-answer   | same as send but returns json with the reply |
|                                 |                                              |
| *jasa.utils*                    |                                              |
| jasa.utils:build-url            |                                              |
| jasa.utils:channel-id           |                                              |
| jasa.utils:get-username-from-id |                                              |
|                                 |                                              |
| *jasa.api*                      |                                              |
| jasa.api:test                   | tests Slack API                              |
|                                 |                                              |
| *jasa.auth*                     |                                              |
| jasa.auth:test                  | tests given token                            |
| jasa.auth:revoke                | revokes given token                          |
|                                 |                                              |
| *jasa.bots*                     |                                              |
| jasa.bots:info                  | returns information about a bot user         |
|                                 |                                              |
| *jasa.chat*                     |                                              |
| jasa.chat:post-message          | sends message                                |
| jasa.chat:prepare-attachments   | creates json for attachments in post-message |
| jasa.chat:delete-message        | deletes message from the channel             |
|                                 |                                              |
| *jasa.im*                       |                                              |
| jasa.im:close-im                | closes IM channel                            |
| jasa.im:history                 | returns IM channel history                   |
| jasa.im:list-im                 | returns all created IM channels              |
| jasa.im:mark                    | sets mark on the IM channel                  |
| jasa.im:open-im                 | opens new IM channel                         |
|                                 |                                              |
| *jasa.emoji*                    |                                              |
| jasa.emoji:list-emoji           | returns available emoji                      |
|                                 |                                              |
| *jasa.channels*                 |                                              |
| jasa.channels:history           | returns history of the channel               |
| jasa.channels:list              | returns list of the channels                 |
| jasa.channels:info              | returns channel info                         |
|                                 |                                              |
| *jasa.groups*                   |                                              |
| jasa.groups:history             | returns history of the group                 |
|                                 |                                              |
| *jasa.users*                    |                                              |
| jasa.users:info                 | returns information about the user           |
